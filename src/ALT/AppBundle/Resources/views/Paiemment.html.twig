{% extends "::layout.html.twig" %}

{% block fil %}
    <span class="couleur">
    <a class="{% if app.request.attributes.get('_route') == 'accueil' %}navbar-brand{% endif %}
    " href="{{ path('accueil') }}">{% trans %} Billetterie {% endtrans %}</a>
    <i class=" glyphicon glyphicon-arrow-right"></i>
    <a class="{% if app.request.attributes.get('_route') == 'infos' %}navbar-brand{% endif %}
    " href="{{ path('infos') }}">{% trans %} Information billet {% endtrans %}</a>
    <i class=" glyphicon glyphicon-arrow-right"></i>
    <a class="{% if app.request.attributes.get('_route') == 'panier' %}navbar-brand{% endif %}
    " href="{{ path('panier') }}">{% trans %} Panier {% endtrans %}</a>
    <i class=" glyphicon glyphicon-arrow-right"></i>
        {% trans %} Paiement {% endtrans %}
    </span>

    <span class="gris">
        <i class=" glyphicon glyphicon-arrow-right"></i>
        {% trans %} Confirmation {% endtrans %}
    </span>
{% endblock %}

{% block body %}
    <h3>{% trans %}7. Paiement{% endtrans %}</h3>
        <p class="paiement">{% trans %}
            Veuillez saisir vos informations bancaire :{% endtrans %}
        </p>

    <form method="post" id="payment-form">
        <div class="form-row">
            <label for="card-element">
                {% trans %}Carte de crédit ou de débit {% endtrans %}
            </label>
            <div id="card-element">
                <!-- a Stripe Element will be inserted here. -->
            </div>

            <!-- Used to display Element errors -->
            <div id="card-errors"></div>
        </div>

        <button class="btsPaiement">{% trans %}Paiement{% endtrans %}</button>
    </form>


    <script src="https://js.stripe.com/v3/"></script>

    <script>
        var stripe = Stripe('pk_test_57OhcPIbAW9pU45H9ND5iQGc');
        var elements = stripe.elements();

        // Custom styling can be passed to options when creating an Element.
        var style = {
            base: {
                // Add your base input styles here. For example:
                fontSize: '16px',
                lineHeight: '24px'
            }
        };

        // Create an instance of the card Element
        var card = elements.create('card', {style: style});

        // Add an instance of the card Element into the `card-element` <div>
        card.mount('#card-element');

        card.addEventListener('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        // Create a token or display an error when the form is submitted.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();

            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the user if there was an error
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server
                    stripeTokenHandler(result.token);
                }
            });
        });

        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);

            // Submit the form
            form.submit();
        }

    </script>
{% endblock %}